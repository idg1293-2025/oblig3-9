


  // === Move the city-container on the Z-axis ===
  if (cityContainer && cityElement) {
    if (isUnlocked) {
      var baseX = 0;
      var baseY = 0; // center the city vertically like frames
  
      var cameraZ = 0;
      var cameraX = 0;
  
      if (yOffset < citySwitchPoint) {
        cameraZ = yOffset;
        cameraX = 0;
      } else {
        cameraZ = citySwitchPoint;
        cameraX = (yOffset - citySwitchPoint) * -1; 
      }
  
  
      var opacity = cityZ < 50 ? 1 : 1 - Math.min(((cityZ - 100) / (perspective - 100)), 1);
      var display = cityZ > perspective ? "none" : "block";
  
  
      cityElement.style.transform = `translate3d(${cameraX}px, ${baseY}px, ${cityZ}px)`;
      
  
      cityElement.style.transform = cityTransform;
      cityElement.style.webkitTransform = cityTransform;
      cityElement.style.mozTransform = cityTransform;
  
      cityElement.style.opacity = opacity;
      cityElement.style.display = display;
    } else {
      var cityTransform = `translate3d(0, 0, 0)`;
      cityElement.style.transform = cityTransform;
      cityElement.style.webkitTransform = cityTransform;
      cityElement.style.mozTransform = cityTransform;
      cityElement.style.opacity = 1;
      cityElement.style.display = "block";
    }
  }
  


if (yOffset < citySwitchPoint) {
    cityZ = initialCityZ + (yOffset / citySwitchPoint) * Math.abs(initialCityZ);
  } else {
    cityZ = 0; // At switch point, city reaches Z = 0
  }


  
//MONA ORGINALT SCRIPT

// var perspective = 1000,
//     zSpacing = -155,
//     zVals = [],
//     $frames = $(".tree"),
//     frames = $frames.toArray(),
//     scrollMsg = document.getElementById("instructions-overlay"),
//     numFrames = $frames.length,
//     switchPoint = 1800; // Z movement stops here

// // Setup initial Z positions
// for (var i = 0; i < numFrames; i++) {
//   zVals.push((numFrames - i) * zSpacing);
// }

// $(window).scroll(function () {
//   var yOffset = window.pageYOffset;

//   // Loop through each frame and update Z/X/Y
//   for (var i = 0; i < numFrames; i++) {
//     var frame = frames[i];

//     // Get the base X and Y positions from data attributes
//     var baseX = parseFloat(frame.dataset.x) || 0;
//     var y = frame.dataset.y === "center"
//       ? window.innerHeight / 2
//       : parseFloat(frame.dataset.y) || 0;

//     // Initialize Z and X based on the scroll position
//     var cameraZ = 0;
//     var cameraX = 0;

//     // Z-scroll before switchPoint
//     if (yOffset < switchPoint) {
//       cameraZ = yOffset;  
//       cameraX = 0; 
//     } else {
//       cameraZ = switchPoint;  
//       cameraX = (yOffset - switchPoint) * -1; 
//     }

//     // Calculate final Z value for each frame
//     var frameZ = zVals[i] + cameraZ;

//     // Apply the calculated X, Y, Z values as a transform
//     var transform = `translate3d(${cameraX}px, ${y}px, ${frameZ}px)`,
//         opacity = frameZ < 50 ? 1 : 1 - Math.min(((frameZ - 100) / (perspective - 100)), 1),
//         display = frameZ > perspective ? "none" : "block";

//     frame.style.transform = transform;
//     frame.style.webkitTransform = transform;
//     frame.style.mozTransform = transform;
//     frame.style.opacity = opacity;
//     frame.style.display = display;
//   }

//   // Remove scroll message if the user has scrolled far enough
//   if (scrollMsg && yOffset > 200) {
//     scrollMsg.parentNode.removeChild(scrollMsg);
//     scrollMsg = null;
//   }

//   // Horizontal movement of the main container
//   if (yOffset > switchPoint) {
//     var offsetX = (yOffset - switchPoint);
//     $('.horizontal-scroll').css('transform', 'translateX(' + (-offsetX) + 'px)');
//   } else {
//     $('.horizontal-scroll').css('transform', 'translateX(0)');
//   }
// });

//VILDE SCRIPT TEST 1
/*var perspective = 1000,
    zSpacing = -155,
    zVals = [],
    $frames = $(".tree"),
    frames = $frames.toArray(),
    scrollMsg = document.getElementById("instructions-overlay"),
    numFrames = $frames.length,
    switchPoint = 1800, // Z movement stops here
    isUnlocked = false; // <<< NEW: Lock until user clicks

// Setup initial Z positions
for (var i = 0; i < numFrames; i++) {
  zVals.push((numFrames - i) * zSpacing);
}

// Listen for click to unlock
document.querySelector(".container-text").addEventListener("click", function() {
  isUnlocked = true;
});

$(window).scroll(function () {
  var yOffset = window.pageYOffset;

  const fadeStart = 300;   // When fading starts
  const fadeEnd = 600;     // When fading fully completes

  const textElement = document.querySelector(".container-text");
  const cityContainer = document.querySelector(".city-container");

  if (textElement && cityContainer) {
    if (isUnlocked) {
      if (yOffset > fadeStart) {
        textElement.classList.add("fade-out");
        cityContainer.classList.add("visible");
      } else {
        textElement.classList.remove("fade-out");
        cityContainer.classList.remove("visible");
      }
    } else {
      // Before unlocked: always show text, hide city
      textElement.classList.remove("fade-out");
      cityContainer.classList.remove("visible");
    }
  }

  // === Main 3D scroll logic ===
  for (var i = 0; i < numFrames; i++) {
    var frame = frames[i];

    var baseX = parseFloat(frame.dataset.x) || 0;
    var y = frame.dataset.y === "center"
      ? window.innerHeight / 2
      : parseFloat(frame.dataset.y) || 0;

    var cameraZ = 0;
    var cameraX = 0;

    if (yOffset < switchPoint) {
      cameraZ = yOffset;
      cameraX = 0;
    } else {
      cameraZ = switchPoint;
      cameraX = (yOffset - switchPoint) * -1;
    }

    var frameZ = zVals[i] + cameraZ;

    var transform = `translate3d(${cameraX}px, ${y}px, ${frameZ}px)`,
        opacity = frameZ < 50 ? 1 : 1 - Math.min(((frameZ - 100) / (perspective - 100)), 1),
        display = frameZ > perspective ? "none" : "block";

    frame.style.transform = transform;
    frame.style.webkitTransform = transform;
    frame.style.mozTransform = transform;
    frame.style.opacity = opacity;
    frame.style.display = display;
  }

  if (scrollMsg && yOffset > 300) {
    scrollMsg.parentNode.removeChild(scrollMsg);
    scrollMsg = null;
  }

  if (yOffset > switchPoint) {
    var offsetX = (yOffset - switchPoint);
    $('.horizontal-scroll, .horizontal-2').css('transform', 'translateX(' + (-offsetX) + 'px)');
  } else {
    $('.horizontal-scroll, .horizontal-2').css('transform', 'translateX(0)');
  }
}); */

